// Code generated by protoc-gen-go. DO NOT EDIT.
// source: services/reports/reportsgrpcapi/grpcapi.proto

/*
Package reportsgrpcapi is a generated protocol buffer package.

It is generated from these files:
	services/reports/reportsgrpcapi/grpcapi.proto

It has these top-level messages:
	DeepPingOutput
	PrimitiveVoid
	GetAssetHealthInput
	GetAssetHealthOutput
	GetFunctionalLocationHealthInput
	GetFunctionalLocationHealthOutput
	GetComplianceLogInput
	GetComplianceLogOutput
	ComplianceItem
	GetReportsInput
	GetReportsOutput
	ReportsItem
	Asset
	FaultItem
	RecommendedActionItem
*/
package reportsgrpcapi

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DeepPingOutput struct {
	Value string `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
}

func (m *DeepPingOutput) Reset()                    { *m = DeepPingOutput{} }
func (m *DeepPingOutput) String() string            { return proto.CompactTextString(m) }
func (*DeepPingOutput) ProtoMessage()               {}
func (*DeepPingOutput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *DeepPingOutput) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type PrimitiveVoid struct {
}

func (m *PrimitiveVoid) Reset()                    { *m = PrimitiveVoid{} }
func (m *PrimitiveVoid) String() string            { return proto.CompactTextString(m) }
func (*PrimitiveVoid) ProtoMessage()               {}
func (*PrimitiveVoid) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// GET ASSET HEALTH
type GetAssetHealthInput struct {
	NodeId string `protobuf:"bytes,1,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
}

func (m *GetAssetHealthInput) Reset()                    { *m = GetAssetHealthInput{} }
func (m *GetAssetHealthInput) String() string            { return proto.CompactTextString(m) }
func (*GetAssetHealthInput) ProtoMessage()               {}
func (*GetAssetHealthInput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetAssetHealthInput) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

type GetAssetHealthOutput struct {
	HealthStatus string `protobuf:"bytes,1,opt,name=health_status,json=healthStatus" json:"health_status,omitempty"`
}

func (m *GetAssetHealthOutput) Reset()                    { *m = GetAssetHealthOutput{} }
func (m *GetAssetHealthOutput) String() string            { return proto.CompactTextString(m) }
func (*GetAssetHealthOutput) ProtoMessage()               {}
func (*GetAssetHealthOutput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetAssetHealthOutput) GetHealthStatus() string {
	if m != nil {
		return m.HealthStatus
	}
	return ""
}

// GET FL HEALTH
type GetFunctionalLocationHealthInput struct {
	NodeId string `protobuf:"bytes,1,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
}

func (m *GetFunctionalLocationHealthInput) Reset()         { *m = GetFunctionalLocationHealthInput{} }
func (m *GetFunctionalLocationHealthInput) String() string { return proto.CompactTextString(m) }
func (*GetFunctionalLocationHealthInput) ProtoMessage()    {}
func (*GetFunctionalLocationHealthInput) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{4}
}

func (m *GetFunctionalLocationHealthInput) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

type GetFunctionalLocationHealthOutput struct {
	HealthStatus string `protobuf:"bytes,1,opt,name=health_status,json=healthStatus" json:"health_status,omitempty"`
}

func (m *GetFunctionalLocationHealthOutput) Reset()         { *m = GetFunctionalLocationHealthOutput{} }
func (m *GetFunctionalLocationHealthOutput) String() string { return proto.CompactTextString(m) }
func (*GetFunctionalLocationHealthOutput) ProtoMessage()    {}
func (*GetFunctionalLocationHealthOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{5}
}

func (m *GetFunctionalLocationHealthOutput) GetHealthStatus() string {
	if m != nil {
		return m.HealthStatus
	}
	return ""
}

type GetComplianceLogInput struct {
	NodeId string `protobuf:"bytes,1,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
}

func (m *GetComplianceLogInput) Reset()                    { *m = GetComplianceLogInput{} }
func (m *GetComplianceLogInput) String() string            { return proto.CompactTextString(m) }
func (*GetComplianceLogInput) ProtoMessage()               {}
func (*GetComplianceLogInput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *GetComplianceLogInput) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

type GetComplianceLogOutput struct {
	ComplianceList []*ComplianceItem `protobuf:"bytes,1,rep,name=compliance_list,json=complianceList" json:"compliance_list,omitempty"`
}

func (m *GetComplianceLogOutput) Reset()                    { *m = GetComplianceLogOutput{} }
func (m *GetComplianceLogOutput) String() string            { return proto.CompactTextString(m) }
func (*GetComplianceLogOutput) ProtoMessage()               {}
func (*GetComplianceLogOutput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *GetComplianceLogOutput) GetComplianceList() []*ComplianceItem {
	if m != nil {
		return m.ComplianceList
	}
	return nil
}

type ComplianceItem struct {
	AssetClassId   string `protobuf:"bytes,1,opt,name=asset_class_id,json=assetClassId" json:"asset_class_id,omitempty"`
	IsCompliant    bool   `protobuf:"varint,2,opt,name=is_compliant,json=isCompliant" json:"is_compliant,omitempty"`
	ComplianceNote string `protobuf:"bytes,3,opt,name=compliance_note,json=complianceNote" json:"compliance_note,omitempty"`
	Created        int64  `protobuf:"varint,4,opt,name=created" json:"created,omitempty"`
}

func (m *ComplianceItem) Reset()                    { *m = ComplianceItem{} }
func (m *ComplianceItem) String() string            { return proto.CompactTextString(m) }
func (*ComplianceItem) ProtoMessage()               {}
func (*ComplianceItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ComplianceItem) GetAssetClassId() string {
	if m != nil {
		return m.AssetClassId
	}
	return ""
}

func (m *ComplianceItem) GetIsCompliant() bool {
	if m != nil {
		return m.IsCompliant
	}
	return false
}

func (m *ComplianceItem) GetComplianceNote() string {
	if m != nil {
		return m.ComplianceNote
	}
	return ""
}

func (m *ComplianceItem) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

type GetReportsInput struct {
	NodeIds []string `protobuf:"bytes,1,rep,name=node_ids,json=nodeIds" json:"node_ids,omitempty"`
}

func (m *GetReportsInput) Reset()                    { *m = GetReportsInput{} }
func (m *GetReportsInput) String() string            { return proto.CompactTextString(m) }
func (*GetReportsInput) ProtoMessage()               {}
func (*GetReportsInput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *GetReportsInput) GetNodeIds() []string {
	if m != nil {
		return m.NodeIds
	}
	return nil
}

type GetReportsOutput struct {
	ReportsList []*ReportsItem `protobuf:"bytes,1,rep,name=reports_list,json=reportsList" json:"reports_list,omitempty"`
}

func (m *GetReportsOutput) Reset()                    { *m = GetReportsOutput{} }
func (m *GetReportsOutput) String() string            { return proto.CompactTextString(m) }
func (*GetReportsOutput) ProtoMessage()               {}
func (*GetReportsOutput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *GetReportsOutput) GetReportsList() []*ReportsItem {
	if m != nil {
		return m.ReportsList
	}
	return nil
}

type ReportsItem struct {
	FunctionalLocationId     string   `protobuf:"bytes,1,opt,name=functional_location_id,json=functionalLocationId" json:"functional_location_id,omitempty"`
	FunctionalLocationName   string   `protobuf:"bytes,2,opt,name=functional_location_name,json=functionalLocationName" json:"functional_location_name,omitempty"`
	FunctionalLocationRisk   float64  `protobuf:"fixed64,3,opt,name=functional_location_risk,json=functionalLocationRisk" json:"functional_location_risk,omitempty"`
	FunctionalLocationHealth string   `protobuf:"bytes,4,opt,name=functional_location_health,json=functionalLocationHealth" json:"functional_location_health,omitempty"`
	Names                    []string `protobuf:"bytes,5,rep,name=names" json:"names,omitempty"`
	Uuids                    []string `protobuf:"bytes,6,rep,name=uuids" json:"uuids,omitempty"`
	Assets                   []*Asset `protobuf:"bytes,7,rep,name=assets" json:"assets,omitempty"`
}

func (m *ReportsItem) Reset()                    { *m = ReportsItem{} }
func (m *ReportsItem) String() string            { return proto.CompactTextString(m) }
func (*ReportsItem) ProtoMessage()               {}
func (*ReportsItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *ReportsItem) GetFunctionalLocationId() string {
	if m != nil {
		return m.FunctionalLocationId
	}
	return ""
}

func (m *ReportsItem) GetFunctionalLocationName() string {
	if m != nil {
		return m.FunctionalLocationName
	}
	return ""
}

func (m *ReportsItem) GetFunctionalLocationRisk() float64 {
	if m != nil {
		return m.FunctionalLocationRisk
	}
	return 0
}

func (m *ReportsItem) GetFunctionalLocationHealth() string {
	if m != nil {
		return m.FunctionalLocationHealth
	}
	return ""
}

func (m *ReportsItem) GetNames() []string {
	if m != nil {
		return m.Names
	}
	return nil
}

func (m *ReportsItem) GetUuids() []string {
	if m != nil {
		return m.Uuids
	}
	return nil
}

func (m *ReportsItem) GetAssets() []*Asset {
	if m != nil {
		return m.Assets
	}
	return nil
}

type Asset struct {
	AssetClassId             string       `protobuf:"bytes,1,opt,name=asset_class_id,json=assetClassId" json:"asset_class_id,omitempty"`
	AssetClassName           string       `protobuf:"bytes,2,opt,name=asset_class_name,json=assetClassName" json:"asset_class_name,omitempty"`
	AssetClassRisk           float64      `protobuf:"fixed64,3,opt,name=asset_class_risk,json=assetClassRisk" json:"asset_class_risk,omitempty"`
	AssetClassHealth         string       `protobuf:"bytes,4,opt,name=asset_class_health,json=assetClassHealth" json:"asset_class_health,omitempty"`
	AssetClassRiskLabelSince int64        `protobuf:"varint,5,opt,name=asset_class_risk_label_since,json=assetClassRiskLabelSince" json:"asset_class_risk_label_since,omitempty"`
	ComplianceStatus         string       `protobuf:"bytes,6,opt,name=compliance_status,json=complianceStatus" json:"compliance_status,omitempty"`
	Faults                   []*FaultItem `protobuf:"bytes,7,rep,name=faults" json:"faults,omitempty"`
}

func (m *Asset) Reset()                    { *m = Asset{} }
func (m *Asset) String() string            { return proto.CompactTextString(m) }
func (*Asset) ProtoMessage()               {}
func (*Asset) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *Asset) GetAssetClassId() string {
	if m != nil {
		return m.AssetClassId
	}
	return ""
}

func (m *Asset) GetAssetClassName() string {
	if m != nil {
		return m.AssetClassName
	}
	return ""
}

func (m *Asset) GetAssetClassRisk() float64 {
	if m != nil {
		return m.AssetClassRisk
	}
	return 0
}

func (m *Asset) GetAssetClassHealth() string {
	if m != nil {
		return m.AssetClassHealth
	}
	return ""
}

func (m *Asset) GetAssetClassRiskLabelSince() int64 {
	if m != nil {
		return m.AssetClassRiskLabelSince
	}
	return 0
}

func (m *Asset) GetComplianceStatus() string {
	if m != nil {
		return m.ComplianceStatus
	}
	return ""
}

func (m *Asset) GetFaults() []*FaultItem {
	if m != nil {
		return m.Faults
	}
	return nil
}

type FaultItem struct {
	Fault_UUID         string                   `protobuf:"bytes,1,opt,name=fault_UUID,json=faultUUID" json:"fault_UUID,omitempty"`
	AssetClassId       string                   `protobuf:"bytes,2,opt,name=asset_class_id,json=assetClassId" json:"asset_class_id,omitempty"`
	FaultType          string                   `protobuf:"bytes,3,opt,name=fault_type,json=faultType" json:"fault_type,omitempty"`
	Author             string                   `protobuf:"bytes,4,opt,name=author" json:"author,omitempty"`
	Created            int64                    `protobuf:"varint,5,opt,name=created" json:"created,omitempty"`
	LastModified       int64                    `protobuf:"varint,6,opt,name=last_modified,json=lastModified" json:"last_modified,omitempty"`
	IsOpen             bool                     `protobuf:"varint,7,opt,name=is_open,json=isOpen" json:"is_open,omitempty"`
	FaultStatus        string                   `protobuf:"bytes,8,opt,name=fault_status,json=faultStatus" json:"fault_status,omitempty"`
	FaultObservation   string                   `protobuf:"bytes,9,opt,name=fault_observation,json=faultObservation" json:"fault_observation,omitempty"`
	Severity           string                   `protobuf:"bytes,10,opt,name=severity" json:"severity,omitempty"`
	CloseComment       string                   `protobuf:"bytes,11,opt,name=close_comment,json=closeComment" json:"close_comment,omitempty"`
	RecommendedActions []*RecommendedActionItem `protobuf:"bytes,12,rep,name=recommended_actions,json=recommendedActions" json:"recommended_actions,omitempty"`
}

func (m *FaultItem) Reset()                    { *m = FaultItem{} }
func (m *FaultItem) String() string            { return proto.CompactTextString(m) }
func (*FaultItem) ProtoMessage()               {}
func (*FaultItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *FaultItem) GetFault_UUID() string {
	if m != nil {
		return m.Fault_UUID
	}
	return ""
}

func (m *FaultItem) GetAssetClassId() string {
	if m != nil {
		return m.AssetClassId
	}
	return ""
}

func (m *FaultItem) GetFaultType() string {
	if m != nil {
		return m.FaultType
	}
	return ""
}

func (m *FaultItem) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *FaultItem) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *FaultItem) GetLastModified() int64 {
	if m != nil {
		return m.LastModified
	}
	return 0
}

func (m *FaultItem) GetIsOpen() bool {
	if m != nil {
		return m.IsOpen
	}
	return false
}

func (m *FaultItem) GetFaultStatus() string {
	if m != nil {
		return m.FaultStatus
	}
	return ""
}

func (m *FaultItem) GetFaultObservation() string {
	if m != nil {
		return m.FaultObservation
	}
	return ""
}

func (m *FaultItem) GetSeverity() string {
	if m != nil {
		return m.Severity
	}
	return ""
}

func (m *FaultItem) GetCloseComment() string {
	if m != nil {
		return m.CloseComment
	}
	return ""
}

func (m *FaultItem) GetRecommendedActions() []*RecommendedActionItem {
	if m != nil {
		return m.RecommendedActions
	}
	return nil
}

type RecommendedActionItem struct {
	Action       string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	Created      int64  `protobuf:"varint,2,opt,name=created" json:"created,omitempty"`
	Comment      string `protobuf:"bytes,3,opt,name=comment" json:"comment,omitempty"`
	WorkId       string `protobuf:"bytes,4,opt,name=work_id,json=workId" json:"work_id,omitempty"`
	LastModified int64  `protobuf:"varint,5,opt,name=last_modified,json=lastModified" json:"last_modified,omitempty"`
	Action_UUID  string `protobuf:"bytes,6,opt,name=action_UUID,json=actionUUID" json:"action_UUID,omitempty"`
	Status       string `protobuf:"bytes,7,opt,name=status" json:"status,omitempty"`
}

func (m *RecommendedActionItem) Reset()                    { *m = RecommendedActionItem{} }
func (m *RecommendedActionItem) String() string            { return proto.CompactTextString(m) }
func (*RecommendedActionItem) ProtoMessage()               {}
func (*RecommendedActionItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *RecommendedActionItem) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *RecommendedActionItem) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *RecommendedActionItem) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *RecommendedActionItem) GetWorkId() string {
	if m != nil {
		return m.WorkId
	}
	return ""
}

func (m *RecommendedActionItem) GetLastModified() int64 {
	if m != nil {
		return m.LastModified
	}
	return 0
}

func (m *RecommendedActionItem) GetAction_UUID() string {
	if m != nil {
		return m.Action_UUID
	}
	return ""
}

func (m *RecommendedActionItem) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func init() {
	proto.RegisterType((*DeepPingOutput)(nil), "reportsgrpcapi.DeepPingOutput")
	proto.RegisterType((*PrimitiveVoid)(nil), "reportsgrpcapi.PrimitiveVoid")
	proto.RegisterType((*GetAssetHealthInput)(nil), "reportsgrpcapi.GetAssetHealthInput")
	proto.RegisterType((*GetAssetHealthOutput)(nil), "reportsgrpcapi.GetAssetHealthOutput")
	proto.RegisterType((*GetFunctionalLocationHealthInput)(nil), "reportsgrpcapi.GetFunctionalLocationHealthInput")
	proto.RegisterType((*GetFunctionalLocationHealthOutput)(nil), "reportsgrpcapi.GetFunctionalLocationHealthOutput")
	proto.RegisterType((*GetComplianceLogInput)(nil), "reportsgrpcapi.GetComplianceLogInput")
	proto.RegisterType((*GetComplianceLogOutput)(nil), "reportsgrpcapi.GetComplianceLogOutput")
	proto.RegisterType((*ComplianceItem)(nil), "reportsgrpcapi.ComplianceItem")
	proto.RegisterType((*GetReportsInput)(nil), "reportsgrpcapi.GetReportsInput")
	proto.RegisterType((*GetReportsOutput)(nil), "reportsgrpcapi.GetReportsOutput")
	proto.RegisterType((*ReportsItem)(nil), "reportsgrpcapi.ReportsItem")
	proto.RegisterType((*Asset)(nil), "reportsgrpcapi.Asset")
	proto.RegisterType((*FaultItem)(nil), "reportsgrpcapi.FaultItem")
	proto.RegisterType((*RecommendedActionItem)(nil), "reportsgrpcapi.RecommendedActionItem")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Reports service

type ReportsClient interface {
	DeepPing(ctx context.Context, in *PrimitiveVoid, opts ...grpc.CallOption) (*DeepPingOutput, error)
	GetAssetHealth(ctx context.Context, in *GetAssetHealthInput, opts ...grpc.CallOption) (*GetAssetHealthOutput, error)
	GetFunctionalLocationHealth(ctx context.Context, in *GetFunctionalLocationHealthInput, opts ...grpc.CallOption) (*GetFunctionalLocationHealthOutput, error)
	GetComplianceLog(ctx context.Context, in *GetComplianceLogInput, opts ...grpc.CallOption) (*GetComplianceLogOutput, error)
	GetReports(ctx context.Context, in *GetReportsInput, opts ...grpc.CallOption) (*GetReportsOutput, error)
}

type reportsClient struct {
	cc *grpc.ClientConn
}

func NewReportsClient(cc *grpc.ClientConn) ReportsClient {
	return &reportsClient{cc}
}

func (c *reportsClient) DeepPing(ctx context.Context, in *PrimitiveVoid, opts ...grpc.CallOption) (*DeepPingOutput, error) {
	out := new(DeepPingOutput)
	err := grpc.Invoke(ctx, "/reportsgrpcapi.Reports/DeepPing", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reportsClient) GetAssetHealth(ctx context.Context, in *GetAssetHealthInput, opts ...grpc.CallOption) (*GetAssetHealthOutput, error) {
	out := new(GetAssetHealthOutput)
	err := grpc.Invoke(ctx, "/reportsgrpcapi.Reports/GetAssetHealth", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reportsClient) GetFunctionalLocationHealth(ctx context.Context, in *GetFunctionalLocationHealthInput, opts ...grpc.CallOption) (*GetFunctionalLocationHealthOutput, error) {
	out := new(GetFunctionalLocationHealthOutput)
	err := grpc.Invoke(ctx, "/reportsgrpcapi.Reports/GetFunctionalLocationHealth", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reportsClient) GetComplianceLog(ctx context.Context, in *GetComplianceLogInput, opts ...grpc.CallOption) (*GetComplianceLogOutput, error) {
	out := new(GetComplianceLogOutput)
	err := grpc.Invoke(ctx, "/reportsgrpcapi.Reports/GetComplianceLog", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reportsClient) GetReports(ctx context.Context, in *GetReportsInput, opts ...grpc.CallOption) (*GetReportsOutput, error) {
	out := new(GetReportsOutput)
	err := grpc.Invoke(ctx, "/reportsgrpcapi.Reports/GetReports", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Reports service

type ReportsServer interface {
	DeepPing(context.Context, *PrimitiveVoid) (*DeepPingOutput, error)
	GetAssetHealth(context.Context, *GetAssetHealthInput) (*GetAssetHealthOutput, error)
	GetFunctionalLocationHealth(context.Context, *GetFunctionalLocationHealthInput) (*GetFunctionalLocationHealthOutput, error)
	GetComplianceLog(context.Context, *GetComplianceLogInput) (*GetComplianceLogOutput, error)
	GetReports(context.Context, *GetReportsInput) (*GetReportsOutput, error)
}

func RegisterReportsServer(s *grpc.Server, srv ReportsServer) {
	s.RegisterService(&_Reports_serviceDesc, srv)
}

func _Reports_DeepPing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PrimitiveVoid)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReportsServer).DeepPing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/reportsgrpcapi.Reports/DeepPing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReportsServer).DeepPing(ctx, req.(*PrimitiveVoid))
	}
	return interceptor(ctx, in, info, handler)
}

func _Reports_GetAssetHealth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAssetHealthInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReportsServer).GetAssetHealth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/reportsgrpcapi.Reports/GetAssetHealth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReportsServer).GetAssetHealth(ctx, req.(*GetAssetHealthInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Reports_GetFunctionalLocationHealth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFunctionalLocationHealthInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReportsServer).GetFunctionalLocationHealth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/reportsgrpcapi.Reports/GetFunctionalLocationHealth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReportsServer).GetFunctionalLocationHealth(ctx, req.(*GetFunctionalLocationHealthInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Reports_GetComplianceLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetComplianceLogInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReportsServer).GetComplianceLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/reportsgrpcapi.Reports/GetComplianceLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReportsServer).GetComplianceLog(ctx, req.(*GetComplianceLogInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Reports_GetReports_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetReportsInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReportsServer).GetReports(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/reportsgrpcapi.Reports/GetReports",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReportsServer).GetReports(ctx, req.(*GetReportsInput))
	}
	return interceptor(ctx, in, info, handler)
}

var _Reports_serviceDesc = grpc.ServiceDesc{
	ServiceName: "reportsgrpcapi.Reports",
	HandlerType: (*ReportsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DeepPing",
			Handler:    _Reports_DeepPing_Handler,
		},
		{
			MethodName: "GetAssetHealth",
			Handler:    _Reports_GetAssetHealth_Handler,
		},
		{
			MethodName: "GetFunctionalLocationHealth",
			Handler:    _Reports_GetFunctionalLocationHealth_Handler,
		},
		{
			MethodName: "GetComplianceLog",
			Handler:    _Reports_GetComplianceLog_Handler,
		},
		{
			MethodName: "GetReports",
			Handler:    _Reports_GetReports_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services/reports/reportsgrpcapi/grpcapi.proto",
}

func init() { proto.RegisterFile("services/reports/reportsgrpcapi/grpcapi.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 982 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x96, 0xdd, 0x6e, 0xdb, 0x36,
	0x14, 0xc7, 0x67, 0x7b, 0xfe, 0x3a, 0x76, 0xdd, 0x94, 0x4d, 0x3c, 0xd5, 0x5d, 0x57, 0x57, 0xfd,
	0x98, 0x81, 0xb6, 0xe9, 0xc7, 0x76, 0x31, 0xa0, 0x43, 0x81, 0x22, 0x45, 0x5d, 0x63, 0x59, 0xd3,
	0xa9, 0x6b, 0xef, 0x06, 0x81, 0x91, 0xe8, 0x84, 0x88, 0x2c, 0x09, 0x22, 0x9d, 0x21, 0xf7, 0x7b,
	0x8c, 0x3d, 0xd0, 0xee, 0xb6, 0xeb, 0x3d, 0xc7, 0x1e, 0x60, 0xe0, 0x21, 0xf5, 0x69, 0x25, 0x6d,
	0xaf, 0xec, 0x73, 0xf8, 0x3f, 0x87, 0xd4, 0x8f, 0x87, 0xe4, 0x81, 0x87, 0x82, 0x25, 0xa7, 0xdc,
	0x63, 0xe2, 0x51, 0xc2, 0xe2, 0x28, 0x91, 0xd9, 0xef, 0x51, 0x12, 0x7b, 0x34, 0xe6, 0x8f, 0xcc,
	0xef, 0x6e, 0x9c, 0x44, 0x32, 0x22, 0xa3, 0xf2, 0xa8, 0x7d, 0x0f, 0x46, 0x2f, 0x19, 0x8b, 0xdf,
	0xf2, 0xf0, 0xe8, 0x60, 0x2d, 0xe3, 0xb5, 0x24, 0xdb, 0xd0, 0x3e, 0xa5, 0xc1, 0x9a, 0x59, 0x8d,
	0x69, 0x63, 0xd6, 0x77, 0xb4, 0x61, 0x5f, 0x86, 0x4b, 0x6f, 0x13, 0xbe, 0xe2, 0x92, 0x9f, 0xb2,
	0x0f, 0x11, 0xf7, 0xed, 0x5d, 0xb8, 0x3a, 0x67, 0xf2, 0x85, 0x10, 0x4c, 0xbe, 0x66, 0x34, 0x90,
	0xc7, 0x8b, 0x50, 0x45, 0x7f, 0x05, 0xdd, 0x30, 0xf2, 0x99, 0xcb, 0x7d, 0x13, 0xdf, 0x51, 0xe6,
	0xc2, 0xb7, 0x9f, 0xc1, 0x76, 0x59, 0x6f, 0xa6, 0xbb, 0x0d, 0x97, 0x8e, 0xd1, 0x76, 0x85, 0xa4,
	0x72, 0x2d, 0x4c, 0xd8, 0x50, 0x3b, 0xdf, 0xa1, 0xcf, 0x7e, 0x06, 0xd3, 0x39, 0x93, 0xaf, 0xd6,
	0xa1, 0x27, 0x79, 0x14, 0xd2, 0x60, 0x3f, 0xf2, 0xa8, 0xfa, 0xf7, 0x49, 0x33, 0xbf, 0x86, 0x5b,
	0x17, 0x04, 0x7f, 0xce, 0x32, 0x1e, 0xc3, 0xce, 0x9c, 0xc9, 0xbd, 0x68, 0x15, 0x07, 0x9c, 0x86,
	0x1e, 0xdb, 0x8f, 0x8e, 0x3e, 0x32, 0x37, 0x85, 0x71, 0x35, 0xc2, 0x4c, 0x38, 0x87, 0xcb, 0x5e,
	0xe6, 0x76, 0x03, 0x2e, 0xa4, 0xd5, 0x98, 0xb6, 0x66, 0x83, 0xa7, 0xdf, 0xec, 0x96, 0xb7, 0x68,
	0x37, 0x8f, 0x5e, 0x48, 0xb6, 0x72, 0x46, 0x79, 0xd8, 0x3e, 0x17, 0xd2, 0xfe, 0xb3, 0x01, 0xa3,
	0xb2, 0x84, 0xdc, 0x81, 0x11, 0x55, 0xa0, 0x5d, 0x2f, 0xa0, 0x42, 0xe4, 0xab, 0x1a, 0xa2, 0x77,
	0x4f, 0x39, 0x17, 0x3e, 0xb9, 0x05, 0x43, 0x2e, 0xdc, 0x34, 0x9b, 0xb4, 0x9a, 0xd3, 0xc6, 0xac,
	0xe7, 0x0c, 0xb8, 0x48, 0xb3, 0x49, 0xf2, 0x6d, 0x69, 0x91, 0x61, 0x24, 0x99, 0xd5, 0xc2, 0x4c,
	0x85, 0x45, 0xbc, 0x89, 0x24, 0x23, 0x16, 0x74, 0xbd, 0x84, 0x51, 0xc9, 0x7c, 0xeb, 0xcb, 0x69,
	0x63, 0xd6, 0x72, 0x52, 0xd3, 0x7e, 0x00, 0x97, 0xe7, 0x4c, 0x3a, 0xfa, 0x93, 0x34, 0xad, 0x6b,
	0xd0, 0x33, 0xb4, 0x04, 0x7e, 0x73, 0xdf, 0xe9, 0x6a, 0x5c, 0xc2, 0x76, 0x60, 0x2b, 0x57, 0x1b,
	0x52, 0xcf, 0x61, 0x68, 0x88, 0x14, 0x31, 0x5d, 0xaf, 0x62, 0x4a, 0xa7, 0x50, 0x8c, 0x06, 0x66,
	0x0c, 0x01, 0xfd, 0xd3, 0x84, 0x41, 0x61, 0x90, 0x7c, 0x0f, 0xe3, 0x65, 0x56, 0x0c, 0x6e, 0x60,
	0xaa, 0x21, 0xa7, 0xb4, 0xbd, 0xdc, 0x28, 0x95, 0x85, 0x4f, 0x7e, 0x00, 0xab, 0x2e, 0x2a, 0xa4,
	0x2b, 0x86, 0xe4, 0xfa, 0xce, 0x78, 0x33, 0xee, 0x0d, 0x5d, 0xb1, 0xf3, 0x22, 0x13, 0x2e, 0x4e,
	0x90, 0x66, 0xa3, 0x2e, 0xd2, 0xe1, 0xe2, 0x84, 0xfc, 0x08, 0x93, 0xba, 0x48, 0x5d, 0x93, 0x08,
	0xba, 0xef, 0x58, 0xcb, 0x73, 0x0a, 0x5b, 0x1d, 0x64, 0xb5, 0x3a, 0x61, 0xb5, 0x91, 0xb1, 0x36,
	0x94, 0x77, 0xbd, 0x56, 0xe4, 0x3b, 0xda, 0x8b, 0x06, 0x79, 0x08, 0x1d, 0xac, 0x0d, 0x61, 0x75,
	0x91, 0xee, 0x4e, 0x95, 0x2e, 0x1e, 0x5c, 0xc7, 0x88, 0xec, 0xbf, 0x9b, 0xd0, 0x46, 0xcf, 0x27,
	0x96, 0xda, 0x0c, 0xb6, 0x8a, 0xaa, 0x02, 0xb4, 0x51, 0xae, 0x43, 0x58, 0x15, 0x65, 0x01, 0x52,
	0x41, 0x89, 0x70, 0x1e, 0x00, 0x29, 0x2a, 0x4b, 0x50, 0xb6, 0x72, 0xad, 0x81, 0xf1, 0x1c, 0xbe,
	0xae, 0xe6, 0x75, 0x03, 0x7a, 0xc8, 0x02, 0x57, 0xf0, 0xd0, 0x63, 0x56, 0x1b, 0xab, 0xd6, 0x2a,
	0xcf, 0xb1, 0xaf, 0x04, 0xef, 0xd4, 0x38, 0xb9, 0x0f, 0x57, 0x0a, 0x27, 0xc1, 0xdc, 0x11, 0x1d,
	0x3d, 0x59, 0x3e, 0xa0, 0xef, 0x09, 0xf2, 0x04, 0x3a, 0x4b, 0xba, 0x0e, 0x32, 0x9a, 0xd7, 0xaa,
	0x34, 0x5f, 0xa9, 0x51, 0xac, 0x54, 0x23, 0xb4, 0xff, 0x6a, 0x41, 0x3f, 0xf3, 0x92, 0x1b, 0x00,
	0xe8, 0x77, 0xdf, 0xbf, 0x5f, 0xbc, 0x34, 0x44, 0xfb, 0xe8, 0x51, 0x8e, 0x1a, 0xe8, 0xcd, 0x1a,
	0xe8, 0x59, 0x12, 0x79, 0x16, 0xa7, 0xe7, 0x56, 0x27, 0xf9, 0xf5, 0x2c, 0x66, 0x64, 0x0c, 0x1d,
	0xba, 0x96, 0xc7, 0x51, 0x62, 0x98, 0x19, 0xab, 0x78, 0x94, 0xdb, 0xa5, 0xa3, 0xac, 0xee, 0xc8,
	0x80, 0x0a, 0xe9, 0xae, 0x22, 0x9f, 0x2f, 0x39, 0xf3, 0xf1, 0xfb, 0x5b, 0xce, 0x50, 0x39, 0x7f,
	0x36, 0x3e, 0x75, 0x15, 0x72, 0xe1, 0x46, 0x31, 0x0b, 0xad, 0x2e, 0x5e, 0x28, 0x1d, 0x2e, 0x0e,
	0x62, 0x16, 0xaa, 0xeb, 0x46, 0x2f, 0xc7, 0xc0, 0xeb, 0xe1, 0xac, 0x03, 0xf4, 0x19, 0x6e, 0xf7,
	0xe1, 0x8a, 0x96, 0x44, 0x87, 0xea, 0x55, 0xc3, 0x62, 0xb6, 0xfa, 0x1a, 0x32, 0x0e, 0x1c, 0xe4,
	0x7e, 0x32, 0x81, 0x9e, 0x60, 0xa7, 0x2c, 0xe1, 0xf2, 0xcc, 0x02, 0xd4, 0x64, 0xb6, 0x5a, 0xa9,
	0x17, 0x44, 0x82, 0xa9, 0xdb, 0x6d, 0xc5, 0x42, 0x69, 0x0d, 0x34, 0x1f, 0x74, 0xee, 0x69, 0x1f,
	0xf9, 0x00, 0x57, 0x13, 0xa6, 0x05, 0x3e, 0xf3, 0x5d, 0x8a, 0xa7, 0x48, 0x58, 0x43, 0xdc, 0xb2,
	0xbb, 0x9b, 0xd7, 0x4b, 0x26, 0x7d, 0x81, 0x4a, 0xdc, 0x3e, 0x92, 0x54, 0xdd, 0xc2, 0xfe, 0xb7,
	0x01, 0x3b, 0xb5, 0x6a, 0x44, 0x8e, 0x56, 0xfa, 0x4a, 0x68, 0xab, 0x88, 0xbc, 0x59, 0x46, 0xae,
	0x46, 0xcc, 0x27, 0xe8, 0x0d, 0x4c, 0x4d, 0xc5, 0xf9, 0xf7, 0x28, 0x39, 0x51, 0x9b, 0x6f, 0xf6,
	0x4f, 0x99, 0x8b, 0x9a, 0x5d, 0x6a, 0xd7, 0xec, 0xd2, 0x4d, 0x18, 0xe8, 0xb9, 0x75, 0x85, 0xe9,
	0x42, 0x06, 0xed, 0xc2, 0x12, 0x1b, 0x43, 0xc7, 0xec, 0x53, 0x57, 0x67, 0xd7, 0xd6, 0xd3, 0xff,
	0x5a, 0xd0, 0x35, 0x97, 0x29, 0xf9, 0x09, 0x7a, 0x69, 0xef, 0x40, 0x6e, 0x54, 0x79, 0x95, 0xba,
	0x85, 0xc9, 0xc6, 0xa3, 0x56, 0x6e, 0x3a, 0xec, 0x2f, 0xc8, 0x6f, 0x30, 0x2a, 0xf7, 0x07, 0xe4,
	0x76, 0x35, 0xa6, 0xa6, 0xdf, 0x98, 0xdc, 0xb9, 0x58, 0x94, 0xa5, 0xff, 0xa3, 0x01, 0xd7, 0x2f,
	0xe8, 0x02, 0xc8, 0xe3, 0x9a, 0x3c, 0x17, 0xf6, 0x1b, 0x93, 0x27, 0x9f, 0x11, 0x91, 0x2d, 0xc3,
	0xc3, 0xf7, 0xad, 0xd4, 0x0f, 0x90, 0xbb, 0x35, 0x89, 0x36, 0x7b, 0x8c, 0xc9, 0xbd, 0x8f, 0xc9,
	0xb2, 0x49, 0x7e, 0x01, 0xc8, 0x1f, 0x51, 0x72, 0xb3, 0x26, 0xae, 0xf8, 0x1c, 0x4f, 0xa6, 0xe7,
	0x0b, 0xd2, 0x94, 0x87, 0x1d, 0xec, 0x1e, 0xbf, 0xfb, 0x3f, 0x00, 0x00, 0xff, 0xff, 0xbb, 0xbf,
	0x7a, 0x3f, 0x6e, 0x0a, 0x00, 0x00,
}
